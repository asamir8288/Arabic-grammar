<?php

/**
 * Assessments
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Assessments extends BaseAssessments {

    public function addAssessment(array $data) {
        $published = false;
        if ($data['published'] == 'yes') {
            $published = true;
        }

        $a = new Assessments();
        $a->menu_id = $data['menu_id'];
        $a->name = $data['name'];
        $a->assessment_time = $data['assessment_time'];
        $a->description = $data['description'];
        $a->created_at = date('ymdHis');
        $a->published = $published;
        $a->save();
    }

    public function updateVisibility($assessment_id) {
        $status = $this->getPublishStatus($assessment_id);
        if ($status)
            $status = false;
        else
            $status = true;

        Doctrine_Query::create()
                ->update('Assessments a')
                ->set('a.published', '?', $status)
                ->where('a.id =?', $assessment_id)
                ->execute();

        return $status;
    }

    private function getPublishStatus($assessment_id) {
        $q = Doctrine_Query::create()
                ->select('a.published')
                ->from('Assessments a')
                ->where('a.id=?', $assessment_id)
                ->setHydrationMode(Doctrine_Core::HYDRATE_ARRAY)
                ->fetchOne();

        return $q['published'];
    }

    public function deleteAssessment($assessment_id) {
        Doctrine_Query::create()
                ->update('Assessments a')
                ->set('a.deleted', '?', true)
                ->where('a.id =?', $assessment_id)
                ->execute();
    }

    public function getAssessmentId($menu_id) {
        $q = Doctrine_Query::create()
                ->select('a.id')
                ->from('Assessments a')
                ->where('a.menu_id=?', $menu_id)
                ->setHydrationMode(Doctrine_Core::HYDRATE_ARRAY)
                ->fetchOne();

        return $q['id'];
    }

}