<?php

/**
 * UserAssessments
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class UserAssessments extends BaseUserAssessments {

    public function addAssessmentToUser(array $data) {
        $ua = new UserAssessments();
        $ua->userid = $data['user_id'];
        $ua->assessment_id = $data['assessment_id'];
        $ua->created_at = date('ymdHis');
        $ua->assessment_type = $data['assessment_type'];
        $ua->save();
    }

    public function isAssessmentAddedAndAvailable($user_id, $assessment_id, $assessment_type) {
        $q = Doctrine_Query::create()
                ->select('COUNT(ua.id) as available_assessment')
                ->from('UserAssessments ua, ua.Assessments a')
                ->where('ua.deleted=0')
                ->andWhere('a.completed=0')
                ->andWhere('ua.completed=0')
                ->andWhere('ua.assessment_type=?', $assessment_type)
                ->andWhere('ua.userid=?', $user_id)
                ->andWhere('ua.assessment_id=?', $assessment_id)
                ->setHydrationMode(Doctrine_Core::HYDRATE_ARRAY)
                ->fetchOne();

        if ($q['available_assessment'] > 0) {
            return true;
        } else {
            return false;
        }
    }

    public function setUserAssessmentQuestion($id, $questions_number) {
        Doctrine_Query::create()
                ->update('UserAssessments ua')
                ->set('ua.questions_number', '?', $questions_number)
                ->where('ua.id =?', $id)
                ->execute();
    }

    public function setAssessmentAsChosin($assessment_id, $assessment_type = 2) {
        Doctrine_Query::create()
                ->update('UserAssessments ua')
                ->set('ua.completed', '?', true)
                ->where('ua.deleted =0')
                ->andWhere('ua.completed =0')
                ->andWhere('ua.assessment_type =?', $assessment_type)
                ->andWhere('ua.assessment_id =?', $assessment_id)
                ->execute();
    }

    public function getAssessmentQesutionNumber($assessment_id, $type = 2) {
        $q = Doctrine_Query::create()
                ->select('ua.questions_number')
                ->from('UserAssessments ua')
                ->where('ua.assessment_id =?', $assessment_id)
                ->andWhere('ua.completed =0')
                ->andWhere('ua.assessment_type =?', $type)
                ->setHydrationMode(Doctrine_Core::HYDRATE_ARRAY)
                ->fetchOne();

        return $q['questions_number'];
    }

    public function decreaseAssessmentQuestionsNumber($assessment_id) {
        $number = $this->getAssessmentQesutionNumber($assessment_id);        
        $new_number = intval($number - 1);
        
        Doctrine_Query::create()
                ->update('UserAssessments ua')
                ->set('ua.questions_number', '?', $new_number)
                ->where('ua.deleted =0')
                ->andWhere('ua.completed =0')
                ->andWhere('ua.assessment_type =2')
                ->andWhere('ua.assessment_id =?', $assessment_id)
                ->execute();
    }

}